
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_ECGProcessing.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_ECGProcessing.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_ECGProcessing.py:


ECG preprocessing and R wave detection
======================================

This notebook describe ECG signal processing, from R wave detection to heart
rate variability and evoked heart rate activity.

.. GENERATED FROM PYTHON SOURCE LINES 8-21

.. code-block:: default


    # Author: Nicolas Legrand <nicolas.legrand@cfin.au.dk>
    # Licence: GPL v3

    import matplotlib.pyplot as plt
    import numpy as np
    import pandas as pd
    import seaborn as sns

    from systole import import_dataset
    from systole.detection import ecg_peaks
    from systole.utils import heart_rate, to_epochs



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\au646069\github\systole\examples\plot_ECGProcessing.py", line 17, in <module>
        from systole import import_dataset
    ImportError: cannot import name 'import_dataset' from 'systole' (c:\programdata\anaconda3\lib\site-packages\systole\__init__.py)




.. GENERATED FROM PYTHON SOURCE LINES 22-24

Loading ECG dataset
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    signal_df = import_dataset()


.. GENERATED FROM PYTHON SOURCE LINES 27-31

Finding R peaks
---------------
The peaks detection algorithms are imported from the py-ecg-detectors module:
https://github.com/berndporr/py-ecg-detectors

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    signal, peaks = ecg_peaks(signal_df.ecg, method="hamilton", sfreq=1000, find_local=True)


.. GENERATED FROM PYTHON SOURCE LINES 34-36

Heart Rate Variability
----------------------

.. GENERATED FROM PYTHON SOURCE LINES 38-40

Event related cardiac deceleration
----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 40-51

.. code-block:: default


    # Extract instantaneous heart rate
    heartrate, new_time = heart_rate(peaks, kind="cubic", unit="bpm")

    # Downsample the stim events channel
    # to fit with the new sampling frequency (1000 Hz)
    neutral, disgust = np.zeros(len(new_time)), np.zeros(len(new_time))

    disgust[np.round(np.where(signal_df.stim.to_numpy() == 2)[0]).astype(int)] = 1
    neutral[np.round(np.where(signal_df.stim.to_numpy() == 3)[0]).astype(int)] = 1


.. GENERATED FROM PYTHON SOURCE LINES 52-54

Event related plot
------------------

.. GENERATED FROM PYTHON SOURCE LINES 54-79

.. code-block:: default

    sns.set_context("talk")
    fig, ax = plt.subplots(figsize=(8, 5))
    for cond, data, col in zip(
        ["Neutral", "Disgust"],
        [neutral, disgust],
        [sns.xkcd_rgb["denim blue"], sns.xkcd_rgb["pale red"]],
    ):

        # Epoch intantaneous heart rate
        # and downsample to 2 Hz to save memory
        epochs = to_epochs(heartrate, data, tmin=0, tmax=11)[:, ::500]

        # Plot
        df = pd.DataFrame(epochs).melt()
        df.variable /= 2
        sns.lineplot(data=df, x="variable", y="value", ci=68, label=cond, color=col, ax=ax)

    ax.set_xlim(0, 10)
    ax.set_xlabel("Time (s)")
    ax.set_ylabel("Heart Rate (BPM)")
    ax.set_title("Instantaneous heart rate after neutral and disgusting images")
    sns.despine()
    plt.tight_layout()



.. GENERATED FROM PYTHON SOURCE LINES 80-86

References
----------
.. [#] Porr, B., & Howell, L. (2019). R-peak detector stress test with a new
noisy ECG database reveals significant performance differences amongst
popular detectors. Cold Spring Harbor Laboratory.
https://doi.org/10.1101/722397


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.038 seconds)


.. _sphx_glr_download_auto_examples_plot_ECGProcessing.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ECGProcessing.py <plot_ECGProcessing.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ECGProcessing.ipynb <plot_ECGProcessing.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_

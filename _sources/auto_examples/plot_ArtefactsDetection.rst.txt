
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\plot_ArtefactsDetection.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_ArtefactsDetection.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_ArtefactsDetection.py:


Outliers and artefacts detection
================================

This example shows how to detect ectopic, missed, extra, slow and long long
from RR or pulse rate interval time series using the method proposed by
Lipponen & Tarvainen (2019) [#]_.

.. GENERATED FROM PYTHON SOURCE LINES 9-13

.. code-block:: default


    # Author: Nicolas Legrand <nicolas.legrand@cfin.au.dk>
    # Licence: GPL v3








.. GENERATED FROM PYTHON SOURCE LINES 14-18

.. code-block:: default

    from systole.detection import rr_artefacts
    from systole.plotting import plot_subspaces
    from systole.utils import simulate_rr








.. GENERATED FROM PYTHON SOURCE LINES 19-32

RR artefacts
------------
The proposed method will detect 4 kinds of artefacts in an RR time series:
Missed R peaks, when an existing R component was erroneously NOT detected by
the algorithm.
* Extra R peaks, when an R peak was detected but does not exist in the
signal.
* Long or short interval intervals, when R peaks are correctly detected but
the resulting interval has extreme value in the overall time-series.
* Ectopic beats, due to disturbance of the cardiac rhythm when the heart
either skip or add an extra beat.
* The category in which the artefact belongs will have an influence on the
correction procedure (see Artefact correction).

.. GENERATED FROM PYTHON SOURCE LINES 34-38

Simulate RR time series
-----------------------
This function will simulate RR time series containing ectopic, extra, missed,
long and short artefacts.

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: default


    rr = simulate_rr()








.. GENERATED FROM PYTHON SOURCE LINES 42-44

Artefact detection
------------------

.. GENERATED FROM PYTHON SOURCE LINES 44-47

.. code-block:: default


    outliers = rr_artefacts(rr)








.. GENERATED FROM PYTHON SOURCE LINES 48-54

Subspaces visualization
-----------------------
You can visualize the two main subspaces and spot outliers. The left pamel
plot subspaces that are more sensitive to ectopic beats detection. The right
panel plot subspaces that will be more sensitive to long or short beats,
comprizing the extra and missed beats.

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default


    plot_subspaces(rr)




.. image:: /auto_examples/images/sphx_glr_plot_ArtefactsDetection_001.png
    :alt: Subspace 1   (ectopic beats detection), Subspace 2   (long and short beats detection)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([<AxesSubplot:title={'center':'Subspace 1 \n (ectopic beats detection)'}, xlabel='Subspace $S_{11}$', ylabel='Subspace $S_{12}$'>,
           <AxesSubplot:title={'center':'Subspace 2 \n (long and short beats detection)'}, xlabel='Subspace $S_{21}$', ylabel='Subspace $S_{22}$'>],
          dtype=object)



.. GENERATED FROM PYTHON SOURCE LINES 58-64

References
----------
.. [#] Lipponen, J. A., & Tarvainen, M. P. (2019). A robust algorithm for
  heart rate variability time series artefact correction using novel
  beat classification. Journal of Medical Engineering & Technology,
  43(3), 173â€“181. https://doi.org/10.1080/03091902.2019.1640306


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.520 seconds)


.. _sphx_glr_download_auto_examples_plot_ArtefactsDetection.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_ArtefactsDetection.py <plot_ArtefactsDetection.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_ArtefactsDetection.ipynb <plot_ArtefactsDetection.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
